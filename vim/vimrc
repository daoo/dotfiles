" daoo's .vimrc

" {{{ Startup
set nocompatible
" }}}
" {{{ Addons
set runtimepath+=~/.vim/vim-addons/vim-addon-manager

fun! SetupVAM()
  let plugins = [
    \ 'Gundo',
    \ 'Mark2666',
    \ 'The_NERD_Commenter',
    \ 'The_NERD_tree',
    \ 'Wombat',
    \ 'ack',
    \ 'alex',
    \ 'fugitive',
    \ 'github:daoo/Mustang2',
    \ 'github:daoo/a.vim',
    \ 'happy',
    \ 'repeat',
    \ 'snipmate',
    \ 'snipmate-snippets',
    \ 'surround',
    \ 'tabular',
    \ 'tango-morning',
    \ 'toggle_words',
    \ 'ctrlp',
    \ ]
" Only add certain plugins if they meet a criteria
  if executable('ctags')
    call add(plugins, 'Tagbar')
  endif

  call vam#ActivateAddons(plugins, {'auto_install' : 0})
endf

call SetupVAM()

" Addon settings
let g:ctrlp_working_path_mode = 0
" }}}
" {{{ General settings
" Backup and temporary files
set backup
set backupdir=~/.vim/tmp/
set directory=~/.vim/tmp/

" Buffers
set autowrite
set hidden

" Folding settings
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=0

" Completion
set wildmenu
set wildmode=list:longest,full
set wildignore=*.gif,*.png,*.jpg,*.swp,*.bak,*.pyc,*.class,*.o,*.hi

" History
set history=500
set undolevels=500

" Make backspace work like 'normal' text editors
set backspace=start,indent,eol

" Searching
set ignorecase
set smartcase
set hlsearch
set incsearch

" Indentation
set cindent
set expandtab
set shiftwidth=2
set softtabstop=2

" Formatting
set formatoptions=tcqro
" }}}
" {{{ Visual Settings
set lazyredraw
set nowrap
set relativenumber
set scrolloff=5
set cursorline
set cursorcolumn

" Status line and command line
set showcmd
set laststatus=2
if exists('g:loaded_fugitive')
  set statusline=%f%m%y%{fugitive#statusline()}%=col:%c%V\ lin:%l\/%L\ %P
else
  set statusline=%f%m%y%=col:%c%V\ lin:%l\/%L\ %P
endif

" Disable error bells
set noerrorbells
set visualbell
set t_vb=

" Color scheme
colorscheme mustang
syntax on
" }}}
" {{{ Auto commands
augroup filetypes
  autocmd!
  autocmd Filetype snippet setlocal sts=0 sw=8 noet
  autocmd Filetype make setlocal sts=0 sw=8 noet
augroup END
" }}}
" {{{ Commands
command! W %!sudo tee > /dev/null %
" }}}
" {{{ Disabled Stupid Keys
" Arrow keys
inoremap <down>  <nop>
inoremap <left>  <nop>
inoremap <right> <nop>
inoremap <up>    <nop>
noremap  <down>  <nop>
noremap  <left>  <nop>
noremap  <right> <nop>
noremap  <up>    <nop>

inoremap <c-left>  <nop>
inoremap <c-right> <nop>
noremap  <c-left>  <nop>
noremap  <c-right> <nop>

" Above arrow keys
inoremap <del>      <nop>
inoremap <end>      <nop>
inoremap <home>     <nop>
inoremap <pagedown> <nop>
inoremap <pageup>   <nop>
noremap  <del>      <nop>
noremap  <end>      <nop>
noremap  <home>     <nop>
noremap  <pagedown> <nop>
noremap  <pageup>   <nop>
" }}}
" {{{ Key Bindings
let mapleader=","

" Disable Ex mode
noremap Q <nop>

" F-keys
nnoremap <f2> :NERDTreeToggle<cr>
nnoremap <f3> :TagbarToggle<cr>
nnoremap <f5> :make run<cr>
nnoremap <f8> :make<cr>
nnoremap <f10> :CommandTFlush<cr>

" Tabular
nnoremap <leader>ap :%s/( /(/g<cr>:%s/ )/)/g<cr>
nnoremap <leader>as :%s/\s\+$//<cr>
nnoremap <leader>aa :Tabularize assignment<cr>
nnoremap <leader>ab :Tabularize braces<cr>
nnoremap <leader>ac :Tabularize commas<cr>

" Misc
nnoremap <leader>cd :cd %:p:h<cr>
nnoremap <leader>jw :ToggleWord<cr>

" Quick edit
nnoremap <leader>eve :vsplit $MYVIMRC<cr>
nnoremap <leader>evs :source $MYVIMRC<cr>

" Searching
nnoremap <leader>fc :nohlsearch<cr>
nnoremap <leader>fg :Ack '<cword>'<cr>
nnoremap <leader>fl /<c-r>=expand("<cword>")<cr><cr>
nnoremap <leader>fr :%s/<c-r>=expand("<cword>")<cr>/

" Git
nnoremap <leader>gc :Gcommit<cr>
nnoremap <leader>gs :Gstatus<cr>

" a.vim
nnoremap <leader>sa :A<cr>
nnoremap <leader>sv :AV<cr>
nnoremap <leader>ss :AS<cr>

" CtrlP
nnoremap <leader>t :CtrlP<cr>

" Gundo
nnoremap <leader>u :GundoToggle<cr>

" Move lines up and down
nnoremap <up> :move -2<cr>
nnoremap <down> :move +<cr>

" Redraw window so search terms are centered
nnoremap n nzz
nnoremap N Nzz

" Saving
noremap <c-s> :w<cr>
inoremap <c-s> <esc>:w<cr>a

" Easier split navigation
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" Line navigation
nnoremap H 0
nnoremap L $
" }}}

" vim: fdm=marker :
