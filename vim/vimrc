" daoo's .vimrc

" {{{ Startup
set nocompatible
" }}}
" {{{ VAM
set runtimepath+=~/.vim/vim-addons/vim-addon-manager

fun! SetupVAM()
  let plugins = [
    \ 'Mark2666',
    \ 'The_NERD_Commenter',
    \ 'The_NERD_tree',
    \ 'Wombat',
    \ 'ack',
    \ 'alex',
    \ 'fugitive',
    \ 'github:daoo/Mustang2',
    \ 'github:daoo/a.vim',
    \ 'happy',
    \ 'repeat',
    \ 'snipmate',
    \ 'snipmate-snippets',
    \ 'surround',
    \ 'tabular',
    \ 'tango-morning',
    \ 'toggle_words',
    \ ]

  " Only add certain plugins if they meet a criteria
  if has('ruby')
    call add(plugins, 'Command-T')
  endif

  if executable('ctags')
    call add(plugins, 'Tagbar')
  endif

  call vam#ActivateAddons(plugins, {'auto_install' : 0})
endf

call SetupVAM()
" }}}
" {{{ General settings
" Backup and temporary files
set backup
set backupdir=~/.vim/tmp/
set directory=~/.vim/tmp/

" Buffers
set autowrite
set hidden

" Folding settings
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=0

" Completion
set wildmenu
set wildmode=list:longest,full
set wildignore=*.gif,*.png,*.jpg,*.swp,*.bak,*.pyc,*.class,*.o,*.hi

" History
set history=500
set undolevels=500

" Make backspace work like 'normal' text editors
set backspace=start,indent,eol

" Searching
set ignorecase
set smartcase
set hlsearch
set incsearch

" Indentation
set cindent
set expandtab
set shiftwidth=2
set softtabstop=2

" Formatting
set formatoptions=tcqro
" }}}
" {{{ Visual Settings
set lazyredraw
set nowrap
set relativenumber
set scrolloff=5
set cursorline
set cursorcolumn

" Status line and command line
set showcmd
set laststatus=2
if exists('g:loaded_fugitive')
  set statusline=%f%m%y%{fugitive#statusline()}%=col:%c%V\ lin:%l\/%L\ %P
else
  set statusline=%f%m%y%=col:%c%V\ lin:%l\/%L\ %P
endif

" Disable error bells
set noerrorbells
set visualbell
set t_vb=

" Color scheme
colorscheme mustang
syntax on
" }}}
" {{{ Filetypes Settings
autocmd Filetype snippet setlocal sts=0 sw=8 noet
autocmd Filetype make setlocal sts=0 sw=8 noet
" }}}
" {{{ Commands
command! W %!sudo tee > /dev/null %
" }}}
" {{{ Disabled Stupid Keys
" Arrow keys
inoremap <Down>  <NOP>
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
noremap  <Down>  <NOP>
noremap  <Left>  <NOP>
noremap  <Right> <NOP>
noremap  <Up>    <NOP>

inoremap <C-Left>  <NOP>
inoremap <C-Right> <NOP>
noremap  <C-Left>  <NOP>
noremap  <C-Right> <NOP>

" Above arrow keys
inoremap <del>      <nop>
inoremap <end>      <nop>
inoremap <home>     <nop>
inoremap <pagedown> <nop>
inoremap <pageup>   <nop>
noremap  <del>      <nop>
noremap  <end>      <nop>
noremap  <home>     <nop>
noremap  <pagedown> <nop>
noremap  <pageup>   <nop>
" }}}
" {{{ Key Bindings
let mapleader=","

" Disable Ex mode
noremap Q <NOP>

" Quick edit
nnoremap ,eve :vsplit $MYVIMRC<cr>
nnoremap ,evs :source $MYVIMRC<cr>

" F-keys
nnoremap <F2> :NERDTreeToggle<CR>
nnoremap <F3> :TagbarToggle<CR>
nnoremap <F5> :make run<CR>
nnoremap <F8> :make<CR>
nnoremap <F10> :CommandTFlush<CR>

" a.vim
nnoremap <Leader>sa :A<CR>
nnoremap <Leader>sv :AV<CR>
nnoremap <Leader>ss :AS<CR>

" Misc
nnoremap <leader>cd :cd %:p:h<cr>
nnoremap <leader>jw :ToggleWord<cr>

" Searching
nnoremap <Leader>fc :nohlsearch<CR>
nnoremap <Leader>fg :Ack '<cword>'<CR>
nnoremap <Leader>fl /<C-r>=expand("<cword>")<CR><CR>
nnoremap <Leader>fr :%s/<C-r>=expand("<cword>")<CR>/

" Tabular
nnoremap <Leader>ap :%s/( /(/g<CR>:%s/ )/)/g<CR>
nnoremap <Leader>aa :Tabularize assignment<CR>
nnoremap <Leader>ab :Tabularize braces<CR>
nnoremap <Leader>ac :Tabularize commas<CR>

" Move lines up and down
nnoremap <Up> :move -2<CR>
nnoremap <Down> :move +<CR>

" Redraw window so search terms are centered
nnoremap n nzz
nnoremap N Nzz

" Saving
noremap <c-s> :w<cr>
inoremap <c-s> <esc>:w<cr>a

" Easier split navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Line navigation
nnoremap H 0
nnoremap L $
" }}}

" vim: fdm=marker :
