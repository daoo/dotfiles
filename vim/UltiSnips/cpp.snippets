snippet inh "include header" b
#include "`!p snip.rv = snip.basename + ".hpp"`"
endsnippet

snippet cl "class" !b
class ${1:`!p snip.rv = snip.basename or "Name"`} {
	public:
		${1/(\w+).*/$1/}(${2:arguments});
		virtual ~${1/(\w+).*/$1/}();

	private:
		${0:/* data */}
};
endsnippet

snippet in "interface" b
class ${1:I`!p snip.rv = snip.basename or "Name"`} {
	public:
		virtual ~$1() { }

		virtual ${4:void} ${2:myMethod}(${3:arguments}) = 0;
};
endsnippet

snippet ns "namespace" !b
namespace ${1:namespace} {
	$0
}
endsnippet

snippet us "using namespace" b
using namespace ${0:std};
endsnippet

snippet usb "using namespace boost" b
using namespace boost${0:::something};
endsnippet
