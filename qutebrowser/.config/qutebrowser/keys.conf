# vim: ft=conf
#
# In this config file, qutebrowser's key bindings are configured.
# The format looks like this:
#
# [keymode]
#
# command
#   keychain
#   keychain2
#   ...
#
# All blank lines and lines starting with '#' are ignored.
# Inline-comments are not permitted.
#
# keymode is a comma separated list of modes in which the key binding should be
# active. If keymode starts with !, the key binding is active in all modes
# except the listed modes.
#
# For special keys (can't be part of a keychain), enclose them in `<`...`>`.
# For modifiers, you can use either `-` or `+` as delimiters, and these names:
#
#  * Control: `Control`, `Ctrl`
#  * Meta:    `Meta`, `Windows`, `Mod4`
#  * Alt:     `Alt`, `Mod1`
#  * Shift:   `Shift`
#
# For simple keys (no `<>`-signs), a capital letter means the key is pressed
# with Shift. For special keys (with `<>`-signs), you need to explicitly add
# `Shift-` to match a key pressed with shift.  You can bind multiple commands
# by separating them with `;;`.
#
# Note that default keybindings are always bound, and need to be explicitly
# unbound if you wish to remove them:
#
# <unbound>
#   keychain
#   keychain2
#   ...

[!normal]

clear-keychain ;; leave-mode
    <Escape>
    <Ctrl-[>

[normal]
# Keybindings for normal mode.

clear-keychain ;; search
    <Escape>

set-cmd-text -s :open
    o

set-cmd-text :open {url}
    O

reload
    r

reload -f
    R

fullscreen
    <F11>

hint
    f

hint all tab
    F

scroll left
    h

scroll down
    j

scroll up
    k

scroll right
    l

undo
    u

scroll-perc 0
    gg

scroll-perc
    G

search-next
    n

search-prev
    N

enter-mode insert
    i

enter-mode caret
    v

yank
    yy

yank -t
    yt

yank -d
    yd

paste
    pp

quickmark-save
    m

set-cmd-text -s :quickmark-load
    b

set-cmd-text -s :quickmark-load -t
    B

save
    sf

zoom-out
    -

zoom-in
    +

zoom
    =

navigate prev
    [[

navigate next
    ]]

navigate prev -t
    {{

navigate next -t
    }}

navigate up
    gu

navigate up -t
    gU

navigate increment
    <Ctrl-A>

navigate decrement
    <Ctrl-X>

download
    gd

view-source
    gf

enter-mode passthrough
    <Ctrl-V>

quit
    ZQ

scroll-page 0 1
    <Ctrl-F>

scroll-page 0 -1
    <Ctrl-B>

scroll-page 0 0.5
    <Ctrl-D>

scroll-page 0 -0.5
    <Ctrl-U>

stop
    <Ctrl-s>

follow-selected
    <Return>
    <Ctrl-M>
    <Ctrl-J>
    <Shift-Return>
    <Enter>
    <Shift-Enter>

follow-selected -t
    <Ctrl-Return>
    <Ctrl-Enter>

spawn mpv {url}
    <Space>v

tab-focus 1
    <Alt-1>

tab-focus 2
    <Alt-2>

tab-focus 3
    <Alt-3>

tab-focus 4
    <Alt-4>

tab-focus 5
    <Alt-5>

tab-focus 6
    <Alt-6>

tab-focus 7
    <Alt-7>

tab-focus 8
    <Alt-8>

tab-focus 9
    <Alt-9>

<unbound>
    <Ctrl-Tab>
    xo
    xO
    wo
    wO
    gm
    gl
    J
    gt
    K
    gT
    gC
    H
    th
    wh
    L
    tl
    wl
    wf
    ;b
    ;f
    ;h
    ;i
    ;I
    .i
    ;o
    ;O
    .o
    ;y
    ;Y
    ;r
    ;R
    ;d
    gO
    ga
    <Ctrl-T>
    gr
    <Backspace>
    d
    <Ctrl-W>
    M
    gb
    gB
    wB
    yY
    yT
    yD
    pP
    PP
    wP
    Pp
    wp
    ss
    Ss
    wb
    sl
    sk
    wi
    ad
    cd
    <Ctrl-Alt-p>
    D
    co

home
    gh

set-cmd-text -s :open -w
    t

set-cmd-text :open -w {url}
    T

back
    <Ctrl-O>

forward
    <Ctrl-I>

paste -t
    pt

download-cancel
    da

download-clear
    dc

spawn --userscript view_in_mpv
    <Space>w

[insert]
# Keybindings for insert mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `open-editor`: Open a texteditor with the focused field.
#  * `paste-primary`: Paste primary selection at cursor position.

open-editor
    <Ctrl-E>

paste-primary
    <Shift-Ins>

[hint]
# Keybindings for hint mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `follow-hint`: Follow the currently selected hint.

follow-hint
    <Return>

hint --rapid links tab-bg
    <Ctrl-R>

hint links
    <Ctrl-F>

hint all tab-bg
    <Ctrl-B>

[command]
# Keybindings for command mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `command-history-prev`: Switch to previous command in history.
#  * `command-history-next`: Switch to next command in history.
#  * `completion-item-prev`: Select previous item in completion.
#  * `completion-item-next`: Select next item in completion.
#  * `command-accept`: Execute the command currently in the commandline.

<unbound>
    <Shift-Tab>
    <Tab>

command-accept
    <Return>

completion-item-next
    <Ctrl-N>

completion-item-prev
    <Ctrl-P>

completion-item-del
    <Ctrl-D>

[prompt]
# Keybindings for prompts in the status line.
# You can bind normal keys in this mode, but they will be only active
# when a yes/no-prompt is asked. For other prompt modes, you can only
# bind special keys.
# Useful hidden commands to map in this section:
#  * `prompt-accept`: Confirm the entered value.
#  * `prompt-yes`: Answer yes to a yes/no question.
#  * `prompt-no`: Answer no to a yes/no question.

prompt-accept
    <Return>

prompt-yes
    y

prompt-no
    n

[command,prompt]

rl-backward-char
    <Ctrl-B>

rl-forward-char
    <Ctrl-F>

rl-backward-word
    <Alt-B>

rl-forward-word
    <Alt-F>

rl-beginning-of-line
    <Ctrl-A>

rl-end-of-line
    <Ctrl-E>

rl-unix-line-discard
    <Ctrl-U>

rl-kill-line
    <Ctrl-K>

rl-kill-word
    <Alt-D>

rl-unix-word-rubout
    <Ctrl-W>
    <Alt-Backspace>

rl-yank
    <Ctrl-Y>

rl-delete-char
    <Ctrl-?>

rl-backward-delete-char
    <Ctrl-H>

[caret]

toggle-selection
    v

drop-selection
    <Ctrl-Space>

enter-mode normal
    c

move-to-next-line
    j

move-to-prev-line
    k

move-to-next-char
    l

move-to-prev-char
    h

move-to-end-of-word
    e

move-to-next-word
    w

move-to-prev-word
    b

move-to-start-of-next-block
    ]

move-to-start-of-prev-block
    [

move-to-end-of-next-block
    }

move-to-end-of-prev-block
    {

move-to-start-of-line
    0

move-to-end-of-line
    $

move-to-start-of-document
    gg

move-to-end-of-document
    G

yank-selected -p
    Y

yank-selected
    y
    <Return>
    <Ctrl-M>
    <Ctrl-J>
    <Shift-Return>
    <Enter>
    <Shift-Enter>

scroll left
    H

scroll down
    J

scroll up
    K

scroll right
    L

