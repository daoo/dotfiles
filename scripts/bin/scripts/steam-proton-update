#!/usr/bin/env bash

# Downloads and extracts the latest GloriousEggroll proton build in the right
# location.

set -euo pipefail

steamroot=$(realpath "$HOME/.steam/root")
if [[ ! -d "$steamroot" ]]; then
  echo "Error: steam not found at ${steamroot}." >&2
  exit 1
fi
echo "Steam root: ${steamroot}"

toolsdir="${steamroot}/compatibilitytools.d"
mkdir -p "$toolsdir"
echo "Tools directory: ${toolsdir}"
echo "Tools directory file count: $(find "${toolsdir}" -mindepth 1 -maxdepth 1 | wc -l)"
echo "Tools directory file size: $(du --si --summarize "${toolsdir}" | cut -f1)"

fetch_latest_release() {
  curl --silent 'https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest'
}

parse_browser_download_url() {
  jq --raw-output '.assets | to_entries[] | select(.value.name | endswith(".tar.gz")) | .value.browser_download_url'
}

url="$(fetch_latest_release | parse_browser_download_url)"
filename="${url/*\/}"
dirname="${filename/.tar.gz/}"
dirpath="${toolsdir}/${dirname}"

echo "Latest url: ${url}"
echo "Target file name: ${filename}"
echo "Target directory: ${dirpath}"

if [[ -d "${dirpath}" ]]; then
  echo "Target directory exists. Already up to date. Doing nothing."
  exit 0
fi

echo "Downloading ${url}"
curl --location "${url}" --output "${toolsdir}/${filename}"

echo "Extracting ${toolsdir}/${filename}"
tar --extract --file="${toolsdir}/${filename}" --directory="${toolsdir}"
rm "${toolsdir}/${filename}"

echo "Upgrading done."
