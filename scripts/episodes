#!/usr/bin/env ruby
# Episodes
# By daoo

require 'fileutils'
require 'open3'

# TODO: custom command
COMMAND    = "mplayer -really-quiet"
STATE_FILE = "./.episodes-state"

def print_help()
  puts "Y - remove and play next file (default)"
  puts "n - keep and quit"
  puts "q - remove and quit"
  puts "? - display this help"
end

def init()
  if File.exists?(STATE_FILE)
    puts "Already initialized"
    exit 1
  else
    puts "Initializing"
    files = Dir.entries(Dir.pwd())
    files.select! { |file| file != "." and file != ".." }
    files.sort!

    File.write(STATE_FILE, files.join("\n"))

    puts "Found #{files.length} file(s)"
    exit 0
  end
end

def uninit()
  if File.exists?(STATE_FILE) then
    puts "Okay"
    File.delete(STATE_FILE)
    exit 0
  else
    puts "Not initialized"
    exit 1
  end
end

case ARGV[0]
  when "init"
    init()
  when "remove"
    uninit()
  else
    if File.exists?(STATE_FILE)
      movie_files = File.readlines(STATE_FILE).map { |s| s.chomp }

      quit = false
      while not quit and not movie_files.empty? do
        file = movie_files.first()
        puts file

        system("#{COMMAND} \"#{file}\"")

        print "Remove file from state [Y,n,q,?]? "
        inp = gets.chomp.downcase

        if inp == "y" or inp == "q" or inp.empty?
          movie_files.shift()
        end

        if inp == "q" or inp == "n"
          quit = true
        end
      end

      if movie_files.empty?
        puts "No more episodes, removing state file"
        File.delete(STATE_FILE)
      else
        puts "Writing state file"
        File.write(STATE_FILE, movie_files.join("\n"))
      end
    else
      puts "Directory need to be initialized."
      puts "Run episodes init"
    end
end
