#!/usr/bin/env ruby

# Lists status of git repos in ~/.git-repos

GIT_FORMAT="%C(yellow)%ar%Creset %C(blue)(%ae)%Creset %s"

TEXT_GREEN  = "\e[0;32m"
TEXT_PURPLE = "\e[0;35m"
TEXT_RED    = "\e[0;31m"
TEXT_RESET  = "\e[0m"

def print_color(color, str)
  print "#{color}#{str}#{TEXT_RESET}"
end

def git_modified_files(repo, work_tree)
  return `git --git-dir="#{repo}" --work-tree="#{work_tree}" status --porcelain`.chomp()
end

def git_log(repo, from, to)
  return `git --git-dir="#{repo}" log --format=format:"#{GIT_FORMAT}" #{from}..#{to}`
end

File.open("#{ENV["HOME"]}/.git-repos") do |f|
  while (line = f.gets)
    repo = line.chomp
    dir     = File.join(ENV["HOME"], repo)
    git_dir = File.join(dir, ".git/")

    print_color(TEXT_RESET, "#{repo}: ")

    mod_files = git_modified_files(git_dir, dir)
    new_commits = git_log(git_dir, "origin/master", "master")
    
    if mod_files.empty?
      print_color(TEXT_GREEN, "no modified files\n")
    else
      print_color(TEXT_RED, "has modified files\n")
    end
    if not new_commits.empty?
      print_color(TEXT_PURPLE, "  has new commits:\n")
      new_commits.each_line do |line|
        puts "    #{line}"
      end
    end
  end
end
